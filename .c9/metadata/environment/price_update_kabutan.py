{"filter":false,"title":"price_update_kabutan.py","tooltip":"/price_update_kabutan.py","undoManager":{"mark":9,"position":9,"stack":[[{"start":{"row":0,"column":0},"end":{"row":149,"column":0},"action":"insert","lines":["import requests","import pandas as pd","import time","import datetime","import os","from bs4 import BeautifulSoup","","start_time = time.time()","","#  現在時刻取得","now_time = datetime.datetime.now()","hour = now_time.hour","mint = now_time.minute","","#  ザラバ中判定","def stock_market_close():","","    def pm16():","        return hour > 15","","    def pm1520():","        return (hour > 14 and mint > 20)","","    return pm16() or pm1520()","","","#  ザラバ中は株価取得しない","if stock_market_close():","","    headers = {\"User-Agent\":","               \"Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:47.0) Gecko/20100101 Firefox/47.0\"}","","    currentpath = os.getcwd()","    path = currentpath + '//STOCK_CSV//'","","    path_adj = currentpath + '//ADJ_STOCK_CSV//'","    filename = os.listdir(path_adj)","    filenum = len(filename)","","    urllist = []","    tickerlist = []","    stock_url_list = []","","    url = 'https://kabutan.jp/stock/?code='","    kabuoji_url = 'https://kabuoji3.com/stock/'","","    # URLリストを作成","","    for i in range(0, filenum):","        code = filename[i].rstrip('.csv')","        urllist.append(url + str(code))","","    # ファイルリストに従って順次実行","    for i in range(0, filenum):","","        code = filename[i].rstrip('.csv')","        print(code)","","        # 対象ページへアクセス","        target_url = urllist[i]","        res = requests.get(target_url, headers=headers)","        content = res.content","        soup = BeautifulSoup(content, 'html.parser')","","        #  前営業日の日付取得","        two_last_day = soup.findAll('dd', {'class': \"floatr\"})","        list_length = len(two_last_day)","","        #  前営業日を取得できた銘柄のみ実行","        if list_length != 0:","","            #  前営業日を計算","            two_last_day = two_last_day[0].find('time')","            two_last_day = two_last_day.get('datetime')","            two_last_day = datetime.datetime.strptime(two_last_day, '%Y-%m-%d')","","            #  最新の営業日を取得","            data = soup.findAll('h2')","            lastday = data[1].find('time')","            lastday = lastday.get('datetime')","","            #  データ取得","            dflist = pd.read_html(target_url, header=None, index_col=0)","","            df_ohlc = dflist[3]","            df_volume = dflist[4]","            contract_num = df_volume.loc['約定回数', 1].rstrip(' 回').replace(',', '')","            contract_num = int(contract_num)","            lastday = datetime.datetime.strptime(lastday, '%Y-%m-%d')","","            new_day = lastday","","            #  約定回数が0でない場合データ更新","            if contract_num != 0:","                new_open = float(df_ohlc.loc['始値', 1])","                new_high = float(df_ohlc.loc['高値', 1])","                new_low = float(df_ohlc.loc['安値', 1])","                new_close = float(df_ohlc.loc['終値', 1])","                new_volume = df_volume.loc['出来高', 1].rstrip(' 株').replace(',', '')","                new_volume = float(new_volume)","","                df_new = pd.DataFrame({'Open': new_open,","                                    'High': new_high,","                                    'Low': new_low,","                                    'Close': new_close,","                                    'Volume': new_volume},","                                    index=[new_day])","","                filepath = path_adj + filename[i]","","                #  ローカル呼び出し","                df_temp = pd.read_csv(filepath, index_col=0, parse_dates=True)","","                df_temp_open = df_temp['Open']","                df_temp_date = df_temp['Open'].index","","                df_date = df_temp['Open'].index","                finaldate = df_date[-1]","","                if finaldate == two_last_day:","                    print('Data update is possible')","                    if finaldate != lastday:","                        df = pd.concat([df_temp, df_new])","                        df.to_csv(filepath)","                        print('update_success')","","                    else:","                        print('The data was up to date')","","                elif finaldate == lastday:","                    print('The data was up to date')","","                else:","                    print('Data update is unpossible')","                    print('Please update data to yesterday_state')","","            else:","                print('Today_Volume is 0')","","        else:","            print('There is no data on kabutan')","","        time.sleep(0.3)","","else:","    print('Tokyo stock market is not close.')","","process_time = time.time() - start_time","print(process_time)",""],"id":1}],[{"start":{"row":10,"column":33},"end":{"row":10,"column":34},"action":"insert","lines":["t"],"id":2},{"start":{"row":10,"column":34},"end":{"row":10,"column":35},"action":"insert","lines":["z"]},{"start":{"row":10,"column":35},"end":{"row":10,"column":36},"action":"insert","lines":["-"]},{"start":{"row":10,"column":36},"end":{"row":10,"column":37},"action":"insert","lines":["j"]},{"start":{"row":10,"column":37},"end":{"row":10,"column":38},"action":"insert","lines":["s"]},{"start":{"row":10,"column":38},"end":{"row":10,"column":39},"action":"insert","lines":["t"]}],[{"start":{"row":10,"column":35},"end":{"row":10,"column":36},"action":"remove","lines":["-"],"id":3}],[{"start":{"row":10,"column":35},"end":{"row":10,"column":36},"action":"insert","lines":["-"],"id":4}],[{"start":{"row":10,"column":29},"end":{"row":10,"column":30},"action":"insert","lines":["u"],"id":5},{"start":{"row":10,"column":30},"end":{"row":10,"column":31},"action":"insert","lines":["t"]}],[{"start":{"row":10,"column":31},"end":{"row":10,"column":32},"action":"insert","lines":["c"],"id":6}],[{"start":{"row":10,"column":36},"end":{"row":10,"column":37},"action":"remove","lines":["t"],"id":7},{"start":{"row":10,"column":36},"end":{"row":10,"column":37},"action":"remove","lines":["z"]},{"start":{"row":10,"column":36},"end":{"row":10,"column":37},"action":"remove","lines":["-"]},{"start":{"row":10,"column":36},"end":{"row":10,"column":37},"action":"remove","lines":["j"]},{"start":{"row":10,"column":36},"end":{"row":10,"column":37},"action":"remove","lines":["s"]},{"start":{"row":10,"column":36},"end":{"row":10,"column":37},"action":"remove","lines":["t"]}],[{"start":{"row":10,"column":30},"end":{"row":10,"column":31},"action":"remove","lines":["t"],"id":8},{"start":{"row":10,"column":29},"end":{"row":10,"column":30},"action":"remove","lines":["u"]}],[{"start":{"row":10,"column":29},"end":{"row":10,"column":30},"action":"remove","lines":["c"],"id":9}],[{"start":{"row":10,"column":33},"end":{"row":10,"column":81},"action":"insert","lines":["(datetime.timezone(datetime.timedelta(hours=9)))"],"id":10}]]},"ace":{"folds":[],"scrolltop":0,"scrollleft":0,"selection":{"start":{"row":10,"column":81},"end":{"row":10,"column":81},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":0},"timestamp":1587716650471,"hash":"8862197f952b3d72b01a542e6de633fcb76b2e09"}